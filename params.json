{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Like Rails' assert_difference, but more powerful ","body":"A nice assert_difference method similar to the one provided by Rails but with\r\nsome improvements. For example:\r\n\r\n```ruby\r\nassert_difference \"Company.count\" => +1, \"User.count\" => +5, \"Slot.count\" => -1 do\r\n  post :something\r\nend\r\n```\r\n\r\nwill assert that a company and 5 users were create (the plus sign is only for\r\nthe visual aid) and a slot was removed.\r\n\r\n[Rails' assert_difference](http://api.rubyonrails.org/classes/ActiveSupport/Testing/Assertions.html#method-i-assert_difference)\r\nwould require a more verbose syntax:\r\n\r\n```ruby\r\nassert_difference \"Company.count\" do\r\n  assert_difference \"User.count\", +5 do\r\n    assert_difference \"Article.count\", -1 do\r\n      post :something\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nExpectations can also be ranges, for example:\r\n\r\n```ruby\r\nassert_difference \"Blog.count\" => +1, \"Post.count\" => 2..5 do # Generate some sample posts when creating a blog\r\n  post :create\r\nend\r\n```\r\n\r\nOn top of that, error reporting is improved by displaying all the counters that didn't match except only one.\r\n\r\nTo use it with Test::Unit add this code:\r\n\r\n```ruby\r\nclass Test::Unit::TestCase\r\n  include AssertDifference\r\nend\r\n```\r\n\r\nor in Rails:\r\n\r\n```ruby\r\nclass ActiveSupport::TestCase\r\n  # ...\r\n  include AssertDifference\r\nend\r\n```\r\n\r\nand to use it with RSpec:\r\n\r\n```ruby\r\nRSpec.configure do |config|\r\n  config.include AssertDifference\r\nend\r\n```","name":"assert_difference"}